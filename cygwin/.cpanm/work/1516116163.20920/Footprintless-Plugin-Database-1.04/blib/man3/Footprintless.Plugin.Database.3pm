.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Footprintless::Plugin::Database 3"
.TH Footprintless::Plugin::Database 3 "2018-01-11" "perl v5.26.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Footprintless::Plugin::Database \- A Footprintless plugin for working with databases
.SH "VERSION"
.IX Header "VERSION"
version 1.04
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Provides the \f(CW\*(C`db\*(C'\fR factory method to the framework as well as the \f(CW\*(C`db\*(C'\fR command to
the \s-1CLI.\s0
.SH "ENTITIES"
.IX Header "ENTITIES"
As with all plugins, this must be registered on the \f(CW\*(C`footprintless\*(C'\fR entity.  
Also, it is necessary to specify the providers you want made available:
.PP
.Vb 10
\&    plugins => [
\&        \*(AqFootprintless::Plugin::Database\*(Aq,
\&    ],
\&    \*(AqFootprintless::Plugin::Database\*(Aq => {
\&        providers => {
\&            csv => \*(AqFootprintless::Plugin::Database::CsvProvider\*(Aq,
\&            mysql => \*(AqFootprintless::Plugin::Database::MySqlProvider\*(Aq,
\&            postres => \*(AqFootprintless::Plugin::Database::PostgreSqlProvider\*(Aq,
\&        }
\&    }
.Ve
.PP
You may supply your own providers given thaty the implement they interface 
outlined by Footprintless::Plugin::Database::AbstractProvider:
.PP
.Vb 5
\&    \*(AqFootprintless::Plugin::Database\*(Aq => {
\&        providers => {
\&            db2 => \*(AqMy::Database::Db2Provider\*(Aq,
\&        }
\&    }
.Ve
.PP
Additional configuration is supported for specifying a default provider and a
custom command helper implementation class:
.PP
.Vb 9
\&    \*(AqFootprintless::Plugin::Database\*(Aq => {
\&        command_helper => \*(AqMy::Automation::CommandHelper\*(Aq,
\&        default_provider => \*(Aqmysql\*(Aq
\&        providers => {
\&            csv => \*(AqFootprintless::Plugin::Database::CsvProvider\*(Aq,
\&            mysql => \*(AqFootprintless::Plugin::Database::MySqlProvider\*(Aq,
\&            postres => \*(AqFootprintless::Plugin::Database::PostgreSqlProvider\*(Aq,
\&        }
\&    }
.Ve
.PP
See \*(L"\s-1ENTITIES\*(R"\s0 in Footprintless::Plugin::Database::AbstractProvider for example 
database entity configuration.
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS "db($footprintless, $coordinate, %options)"
.el .SS "db($footprintless, \f(CW$coordinate\fP, \f(CW%options\fP)"
.IX Subsection "db($footprintless, $coordinate, %options)"
Returns a new database provider instance.  See 
Footprintless::Plugin::Database::AbstractProvider.
.SS "\fIdb_command_helper()\fP"
.IX Subsection "db_command_helper()"
Returns a new command helper for the db command. See 
Footprintless::Plugin::Database::DefaultCommandHelper.
.SH "AUTHOR"
.IX Header "AUTHOR"
Lucas Theisen <lucastheisen@pastdev.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2016 by Lucas Theisen.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Please see those modules/websites for more information related to this module.
.IP "\(bu" 4
\&\s-1DBI\s0
.IP "\(bu" 4
Footprintless
.IP "\(bu" 4
Footprintless::MixableBase
.IP "\(bu" 4
Footprintless::Plugin::Database
.IP "\(bu" 4
Footprintless::Plugin::Database::AbstractProvider
.IP "\(bu" 4
Footprintless::Plugin::Database::CsvProvider
.IP "\(bu" 4
Footprintless::Plugin::Database::DefaultCommandHelper
.IP "\(bu" 4
Footprintless::Plugin::Database::MySqlProvider
.IP "\(bu" 4
Footprintless::Plugin::Database::PostgreSqlProvider
